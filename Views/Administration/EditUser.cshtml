@model EditUserViewModel
@inject IAuthorizationService authorizationService

@{
    ViewData["Title"] = "All Users";
    Layout = "_Layout";
}

<h1>Edit User</h1>

<form method="post" class="mt-3">
    <div class="form-group row">
        <label asp-for="@Model.Id" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="@Model.Id" disabled class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="@Model.Email" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="@Model.Email" class="form-control" />
            <span asp-validation-for="@Model.Email" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <label asp-for="@Model.UserName" class="col-sm-2 col-form-label"></label>
        <div class="col-sm-10">
            <input asp-for="@Model.UserName" class="form-control" />
            <span asp-validation-for="@Model.UserName" class="text-danger"></span>
        </div>
    </div>
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group row">
        <div class="col-sm-10">
            <button type="submit" class="btn btn-primary">Update</button>
            <a asp-action="ListUsers" asp-controller="Administration" class="btn btn-outline-primary">Cancel</a>
        </div>
    </div>

    @if ((await authorizationService.AuthorizeAsync(User, "Index+DetailsRolesPolicy")).Succeeded)
    {
    <div class="card">
        <div class="card-header">
            <h3> User Roles</h3>
        </div>
        <div class="card-body">
            @if (Model.Roles.Any())
            {
                foreach (var role in Model.Roles)
                {
                    <h5 class="card-text">@role</h5>
                }
            }
            else
            {
                <h5 class="card-title">Non At The Moment</h5>
            }
        </div>
        <div class="card-footer">
            @if ((await authorizationService.AuthorizeAsync(User, "EditUserInRolesPolicy")).Succeeded)
            {
                <a asp-action="ManageUserRoles" asp-route-userId="@Model.Id" class="btn btn-primary">Manage Roles</a>
            }
        </div>
    </div>
    }

    @if ((await authorizationService.AuthorizeAsync(User, "ManageClaimsUsersPolicy")).Succeeded)
    {
    <div class="card">
        <div class="card-header">
            <h3>User Claims</h3>
        </div>
        <div class="card-body">
            @if (Model.Claims.Any())
            {
                foreach (var claim in Model.Claims)
                {
                    @*<h5 class="card-text">@claim</h5>*@
                    <h5 class="card-text">
                        @claim.Type.Replace("-->", " "):
                        @if (claim.Value == "true")
                        {
                            @*<span class="text-danger">Check Icon</span>*@
                            <i class="fa fa-check text-success"></i>
                        }
                        else
                        {
                            @*<span class="text-success">X</span>*@
                            <i class="fa fa-close text-danger"></i>
                        }
                    </h5>
                }
            }
            else
            {
                <h5 class="card-title">Non At The Moment</h5>
            }
        </div>
        <div class="card-footer">
            <a asp-action="ManageUserClaims" asp-route-userId="@Model.Id" class="btn btn-primary">Manage Claims</a>
        </div>
    </div>
    }
</form>