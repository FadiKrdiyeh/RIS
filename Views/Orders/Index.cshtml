@model IEnumerable<Order>
@inject IAuthorizationService authorizationService

@{
	ViewData["Title"] = Resource.OrderIndex;
	Layout = "~/Pages/Shared/_Layout.cshtml";
}

<script>
	let activeLink = document.querySelector(".scrollmenu .custom-nav-item#orderLink");
	activeLink.classList.add("active");
</script>

<h1 class="main-title">@Resource.Order</h1>

@*<p>
	<a asp-action="Create" class="btn create-o-btn mb-5">@Resource.AddOrder <i class="fa fa-plus ms-2"></i></a>
</p>*@
<div class="table-responsive">
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.patient.Givenid)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.patient)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.modality.Name)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.proceduretype.Namear)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Startdate)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Doctorid)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.dept.Namear)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Clinicid)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Modalitytypeid)
				</th>
				<th>@Resource.Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr class="show-buttons">
					<td>
						@Html.DisplayFor(modelItem => item.patient.Givenid)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.patient.Firstname)
						@Html.DisplayFor(modelItem => item.patient.Lastname)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.modality.Name)
					</td>
					@{
						if (Resource.Lang == "ar")
						{
							<td>@Html.DisplayFor(modelItem => item.proceduretype.Namear)</td>
						}
						else
						{
							<td>@Html.DisplayFor(modelItem => item.proceduretype.Nameen) </td>
						}
					}

					<td>
						@Html.DisplayFor(modelItem => item.Startdate)
					</td>

					<td>
						@Html.DisplayFor(modelItem => item.RisAppDoctor.Firstname)
						@Html.DisplayFor(modelItem => item.RisAppDoctor.Lastname)
					</td>

					@if (Resource.Lang == "ar")
					{
						<td>@Html.DisplayFor(modelItem => item.dept.Namear)</td>
					}
					else
					{
						<td>@Html.DisplayFor(modelItem => item.dept.Nameen) </td>
					}
					@if (Resource.Lang == "ar")
					{
						<td>@Html.DisplayFor(modelItem => item.clinic.Namear)</td>
					}
					else
					{
						<td>@Html.DisplayFor(modelItem => item.clinic.Nameen) </td>
					}
					@if (Resource.Lang == "ar")
					{
						<td>@Html.DisplayFor(modelItem => item.modalitytype.Namear)</td>
					}
					else
					{
						<td>@Html.DisplayFor(modelItem => item.modalitytype.Nameen) </td>
					}

					@*<td>
						
					<a asp-action="Edit" asp-route-id="@item.Id">@Resource.Edit</a> |
					<a asp-action="Details" asp-route-id="@item.Id">@Resource.Details</a> |
					<a asp-action="Delete" asp-route-id="@item.Id">@Resource.Delete</a>
					</td>*@
					<td class="position-relative overflow-hidden">
						<div class="table-buttons">
							@if ((await authorizationService.AuthorizeAsync(User, "EditOrdersPolicy")).Succeeded)
							{
								<a asp-action="Edit" asp-route-id="@item.Id" class="btn edit-btn icon-btn rounded-circle" title="@Resource.Edit"><i class="fa fa-edit"></i></a>
							}
							@if ((await authorizationService.AuthorizeAsync(User, "Index+DetailsOrdersPolicy")).Succeeded)
							{
								<a asp-action="Details" asp-route-id="@item.Id" class="btn details-btn icon-btn rounded-circle" title="@Resource.Details"><i class="fa fa-info"></i></a>
							}
							@if ((await authorizationService.AuthorizeAsync(User, "DeleteOrdersPolicy")).Succeeded)
							{
								<a asp-action="Delete" asp-route-id="@item.Id" class="btn delete-btn icon-btn rounded-circle" title="@Resource.Delete"><i class="fa fa-trash"></i></a>
							}
						</div>
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
