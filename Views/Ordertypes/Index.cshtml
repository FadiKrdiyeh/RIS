@model IEnumerable<Ris2022.Data.Models.Ordertype>
@inject IAuthorizationService authorizationService

@{
    ViewData["Title"] = @Resource.Ordertype;
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<script>
    let activeLink = document.querySelector(".scrollmenu .custom-nav-item#orderTypeLink");
    activeLink.classList.add("active");
</script>

<h1 class="main-title">@Resource.Ordertype</h1>

@if ((await authorizationService.AuthorizeAsync(User, "CreateOrderTypesPolicy")).Succeeded)
{
    <p>
        <a asp-action="Create" class="btn create-o-btn mb-5">@Resource.Create @Resource.Ordertype <i class="fa fa-plus ms-2"></i></a>
    </p>
}
<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Namear)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Nameen)
                </th>
                <th>@Resource.Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="show-buttons">
                    <td>
                        @Html.DisplayFor(modelItem => item.Namear)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Nameen)
                    </td>
                    @*<td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>*@
                    <td class="position-relative overflow-hidden">
                        <div class="table-buttons">
                            @if ((await authorizationService.AuthorizeAsync(User, "EditOrderTypesPolicy")).Succeeded)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn edit-btn icon-btn rounded-circle" title="@Resource.Edit"><i class="fa fa-edit"></i></a>
                            }
                            @if ((await authorizationService.AuthorizeAsync(User, "Index+DetailsOrderTypesPolicy")).Succeeded)
                            {
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn details-btn icon-btn rounded-circle" title="@Resource.Details"><i class="fa fa-info"></i></a>
                            }
                            @if ((await authorizationService.AuthorizeAsync(User, "DeleteOrderTypesPolicy")).Succeeded)
                            {
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn delete-btn icon-btn rounded-circle" title="@Resource.Delete"><i class="fa fa-trash"></i></a>
                            }
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
